########
# Copyright (c) 2017 MSO4SC - javier.carnero@atos.net
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

tosca_definitions_version: cloudify_dsl_1_3

imports:
    # to speed things up, it is possible to download this file,
    - http://www.getcloudify.org/spec/cloudify/4.1/types.yaml
    # HPC pluging
    - http://raw.githubusercontent.com/MSO4SC/cloudify-hpc-plugin/master/plugin.yaml

inputs:
    # Monitor
    monitor_entrypoint:
        description: Monitor entrypoint IP
        default: "127.0.0.1"
        type: string

    # Job prefix name
    job_prefix:
        description: Job name prefix in HPCs
        default: "mso4sc"
        type: string

    # CESGA FTII parameters
    ft2_config:
        description: FTII connection credentials
        default: {}
    
    # SZE test infrastructure parameters
    sze_config:
        description: SZE test infrastructure credentials
        default: {}

    parallel_tasks:
        description: number of tasks/processes to run in parallel
        default: 1

    max_time:
        description: maximum allowed time for run (hours and minutes)
        default: '00:05'
        
    input_url:
        description: url to retrieve for case file
        default: {}


node_templates:
    ft2_node:
        type: hpc.nodes.Compute
        properties:
            config: { get_input: ft2_config }
            monitor_entrypoint: { get_input: monitor_entrypoint }
            monitor_orchestrator_available: True
            job_prefix: { get_input: job_prefix }
#            simulate: True  # COMMENT to test against a real HPC

    opm_flow_single_job:
        type: hpc.nodes.singularity_job
        properties:
            job_options: 
                modules:
                    - gcc/5.3.0
                    - openmpi/1.10.2
                    - singularity/2.3.1
                partition: 'thin-shared'
                image: '$SINGULARITY_REPO/opmrelease.img'
                volumes:
                    - '/scratch '
                    - '/mnt'
                command: 'flow $LUSTRE/run_generated.param output_dir=$LUSTRE/simoutput'
#                command: 'echo $SINGULARITY_REPO > $LUSTRE/testout'
                nodes: 1
                tasks: { get_input: parallel_tasks }
                tasks_per_node: { get_input: parallel_tasks }
                max_time: { get_input: max_time }
            deployment:
                bootstrap: 'scripts/singularity_bootstrap_run-flow-generic.sh'
                revert: 'scripts/singularity_revert_run-flow-generic.sh'
                inputs:
                    - '$LUSTRE'
                    - { get_input: input_url }
        relationships:
            - type: job_contained_in_hpc
              target: ft2_node

outputs:
    single_job_name:
        description: single job name in the HPC
        value: { get_attribute: [opm_flow_single_job, job_name] }
