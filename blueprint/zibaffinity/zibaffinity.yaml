########
# Copyright (c) 2017 MSO4SC - javier.carnero@atos.net
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

tosca_definitions_version: cloudify_dsl_1_3

imports:
    # to speed things up, it is possible to download this file,
    - http://www.getcloudify.org/spec/cloudify/4.1/types.yaml
    # HPC pluging
    - http://raw.githubusercontent.com/MSO4SC/cloudify-hpc-plugin/master/plugin.yaml

inputs:
    # Monitor
    monitor_entrypoint:
        description: Monitor entrypoint IP
        default: "127.0.0.1"
        type: string

    # Job prefix name
    job_prefix:
        description: Job name prefix in HPCs
        default: "mso4sc"
        type: string

    # CESGA FTII parameters
    ft2_config:
        description: FTII connection credentials
        default: {}
    
    # SZE test infrastructure parameters
    sze_config:
        description: SZE test infrastructure credentials
        default: {}
    
    # ZA ligand path    !!!!! USER input
    za_lig:
        description: ZA ligand path
        default: '$LUSTRE/data_4_javier/zibaffinity_tosca/input/17betaEstradiol.pdb'
        type: string
    
    # ZA target path    !!!!! USER selection from DB output
    za_tar:
        description: ZA target path
        default: '$LUSTRE/data_4_javier/zibaffinity_tosca/input/erAlpha-1gwr'
        type: string
    
    # ZA formal ligand charge    !!!!! USER input
    za_charge:
        description: ZA formal ligand charge
        default: "0"
        type: string
    
    # ZA main simulation directory    !!!!! HPC-dependent
    za_sim_path:
        description: ZA main simulation directory
        default: '$LUSTRE/data_4_javier/zibaffinity_tosca'
        type: string
    
    # ZA user mail address    !!!!! USER input
    za_mail:
        description: ZA user mail address
        default: "durmaz@zib.de"
        type: string
    
    # ZA batch script name    !!!!! name of slurm here script created outside container
    za_slurm_script:
        description: ZA batch script name
        default: "za_mdrun.slurm"
        type: string
     
    # ZA image file    !!!!! HPC-dependent
    za_image:
        description: ZA image file
        default: 'ubuntu-16.04_sing-2.4.2_zibaffinity_writable.img'
        type: string
     
    # ZA image path    !!!!! HPC-dependent
    za_image_path:
        description: ZA image path
        default: '$LUSTRE/data_4_javier/zibaffinity_b4-tosca'
        type: string
     
    # ZA number of threads    !!!!! HPC-dependent
    za_ntomp:
        description: ZA number of threads
        default: '12'
        type: string
     
    # ZA main script name    !!!!! ZA main script executed using mpirun (currently OpenMPI)
    za_main_script:
        description: ZA main script name
        default: 'za_main.sh'
        type: string
     
    # ZA target DB file    !!!!! ZA main script executed using mpirun (currently OpenMPI)
    za_db:
        description: ZA target DB file
        default: '/opt/mysqldump_affinity_zib.de.sqlite'
        type: string
    
    
node_templates:
    ft2_node:
        type: hpc.nodes.Compute
        properties:
            config: { get_input: ft2_config }
            monitor_entrypoint: { get_input: monitor_entrypoint }
            monitor_orchestrator_available: True
            job_prefix: { get_input: job_prefix }
#            simulate: True  # COMMENT to test against a real HPC

    za_db_job:
        type: hpc.nodes.singularity_job
        properties:
            job_options: 
                modules:
                    - gcc/5.3.0
                    - openmpi/1.10.2
                    - singularity/2.4.2
                partition: 'cola-corta' #'thin-shared'
                image: { concat: [ { get_input: za_sim_path },'/',{ get_input: za_image } ]}
                volumes:
                    - '/mnt'
###             return output to mso portal and let user select a target
                command: { concat: ['/usr/bin/sqlite3',' ',{ get_input: za_db },' ','"SELECT name FROM targets" | while read target; do echo "target molecule $target" >> ',' ',{ get_input: za_sim_path },'/sim_dir/targets.txt; done']}
                nodes: 1
                tasks: 1
                tasks_per_node: 1
                max_time: '00:05'
            deployment:
                bootstrap: 'scripts/za_db_bootstrap.sh'
                revert: 'scripts/za_db_revert.sh'
                inputs:
                    - { get_input: za_image_path }
                    - { get_input: za_sim_path }
                    - { get_input: za_image }
        relationships:
            - type: job_contained_in_hpc
              target: ft2_node
    
    za_mdrun_job:
        type: hpc.nodes.job
        properties:
            job_options:
                type: 'SBATCH'
                modules:
                    - gcc/5.3.0
                    - openmpi/1.10.2
                    - singularity/2.4.2
                command: { concat: [' --array=0-2 ', ' ', { get_input: za_sim_path }, '/', { get_input: za_slurm_script }] }
            deployment:
                bootstrap: 'scripts/za_mdrun_bootstrap.sh'
                revert: 'scripts/za_mdrun_revert.sh'
                inputs:
                    - { get_input: za_lig }
                    - { get_input: za_tar }
                    - { get_input: za_charge }
                    - { get_input: za_sim_path }
                    - { get_input: za_mail }
                    - { get_input: za_slurm_script }
                    - { concat: [ { get_input: za_sim_path },'/',{ get_input: za_image } ]}
                    - { get_input: za_ntomp }
                    - { get_input: za_main_script }
        relationships:
            - type: job_contained_in_hpc
              target: ft2_node
            - type: job_depends_on
              target: za_db_job

outputs:
    za_db_job_name:
        description: first job name in the HPC
        value: { get_attribute: [za_db_job, job_name] }
    za_mdrun_job_name:
        description: first job name in the HPC
        value: { get_attribute: [za_mdrun_job, job_name] }
        
