########
# Copyright (c) 2017 MSO4SC - javier.carnero@atos.net
#                           - vedat.durmaz@gmx.net 
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

tosca_definitions_version: cloudify_dsl_1_3

imports:
    - http://www.getcloudify.org/spec/cloudify/4.1/types.yaml
    - http://raw.githubusercontent.com/MSO4SC/cloudify-hpc-plugin/master/plugin.yaml

inputs:

    # CESGA FTII parameters
    mso4sc_hpc_primary:
        description: FTII connection credentials
        default: {}
        
    # Default ligand definition (testing)
    mso4sc_dataset_lig:
        description: ZA default ligand definition
        default: 'www.zib.de/durmaz/temp/17betaEstradiol.pdb'
        type: string
    
    # ZA target name    !!!!! USER selection from catalogue corresponding to DB table
    mso4sc_dataset_tar:
        description: ZA target (path)
        default: 'erAlpha-1gwr'
        type: string
    
    # $3 - ZA formal ligand charge    !!!!! USER input
    za_charge:
        description: ZA formal ligand charge
        default: "'0'"
        type: string

     


## dsl definitions:  https://docs.cloudify.co/4.3.0/developer/blueprints/spec-dsl-definitions/
dsl_definitions:
    - &za_lig
        '$CURRENT_WORKDIR/ligand.pdb' #ZA ligand path
    - &za_home_dir
        '$HOME:/home/$USER' # ZA home directory  
    - &za_work_path
        '$CURRENT_WORKDIR' # $4 - ZA main simulation directory    !!!!! HPC-dependent
    - &za_mail
        "durmaz@zib.de" # $5 - ZA user mail address    !!!!! USER input
    - &za_image
        "zibaffinity-latest.simg" # ZA image file name    !!!!! HPC-dependent
    - &za_image_path
        "shub://sregistry.srv.cesga.es/mso4sc/zibaffinity:latest" # ZA image path    !!!!! HPC-dependent
    - &za_gmx_path
        "/opt/gromacs-5.1.2/bin" # ZA Gromacs path    !!!!! HPC-dependent
    - &za_db
        "/opt/zibaffinity_target_database.sqlite" # ZA target DB file    !!!!! -dependent
    - &za_db_script
        "za_db_target.sh" # ZA db script name  za_db_slurm
    - &za_db_slurm
        "za_db.slurm" # ZA db batch script name    !!!!! name of slurm here script created outside container
    - &za_module_sing
        "singularity/2.4.2" # ZA HPC singularity module   !!!!! HPC-dependent
    - &za_hpc_partition
        "cola-corta" # ZA HPC cluster partition   !!!!! HPC-dependent (cola-corta, thin-shared, thinnodes)
    - &za_hpc_partition_prep
        "thinnodes" # ZA HPC cluster partition   !!!!! HPC-dependent (cola-corta, thin-shared,thinnodes)
    - &za_mpi_nt
        '"24"' # ZA number of cores    !!!!! HPC-dependent  
    - &za_mpi_nt_rerun
        "'6'" # ZA number of cores for rerun    !!!!! HPC-dependent
    - &za_prep_script
        "za_prep_sim.sh" # ZA prep script name    !!!!! ZA prep script executed sequentially
    - &za_prep_slurm
        "za_prep.slurm" # ZA prep batch script name    !!!!! name of slurm here script created outside container
    - &za_mpi_em_script
        "za_mpi_em.sh" # ZA energy minimization script name    !!!!! ZA main script executed using mpirun (currently OpenMPI)
    - &za_mpi_em_slurm
        "za_mpi_em.slurm" # ZA energy minimization batch script name    !!!!! name of slurm here script created outside container
    - &za_prep_nvt_script
        "za_prep_nvt.sh" # ZA nvt preparation script name    !!!!! ZA prep script executed sequentially   
    - &za_prep_nvt_slurm
        "za_prep_nvt.slurm" # ZA nvt preparation batch script name    !!!!! name of slurm here script created outside container
    - &za_mpi_nvt_script
        "za_mpi_nvt.sh" # ZA temperature equilibration script name    !!!!! ZA main script executed using mpirun (currently OpenMPI)
    - &za_mpi_nvt_slurm
        "za_mpi_nvt.slurm" # ZA temperature equilibration batch script name    !!!!! name of slurm here script created outside container
    - &za_prep_npt_script
        "za_prep_npt.sh" # ZA npt preparation script name    !!!!! ZA prep script executed sequentially 
    - &za_prep_npt_slurm
        "za_prep_npt.slurm"  # ZA npt preparation batch script name    !!!!! name of slurm here script created outside container
    - &za_mpi_npt_script
        "za_mpi_npt.sh" # ZA pressure equilibration script name    !!!!! ZA main script executed using mpirun (currently OpenMPI)
    - &za_mpi_npt_slurm
        "za_mpi_npt.slurm" # ZA pressure equilibration batch script name    !!!!! name of slurm here script created outside container
    - &za_prep_md_script
        "za_prep_md.sh" # ZA md preparation script name    !!!!! ZA prep script executed sequentially
    - &za_prep_md_slurm
        "za_prep_md.slurm" # ZA md preparation batch script name    !!!!! name of slurm here script created outside container
    - &za_mpi_md_script
        "za_mpi_md.sh" # ZA production run script name    !!!!! ZA main script executed using mpirun (currently OpenMPI)
    - &za_mpi_md_slurm
        "za_mpi_md.slurm" # ZA production run batch script name    !!!!! name of slurm here script created outside container
    - &za_prep_rerun_script
        "za_prep_rerun.sh" # ZA rerun preparation script name    !!!!! ZA prep script executed sequentially
    - &za_prep_rerun_slurm
        "za_prep_rerun.slurm" # ZA rerun preparation batch script name    !!!!! name of slurm here script created outside container
    - &za_mpi_rerun_script
        "za_mpi_rerun.sh" # ZA energy rerun script name    !!!!! ZA main script executed using mpirun (currently OpenMPI)
    - &za_mpi_rerun_slurm
        "za_mpi_rerun.slurm" # ZA energy rerun batch script name    !!!!! name of slurm here script created outside container
    - &za_post_rerun_script
        "za_post_rerun.sh" # ZA post rerun script name    !!!!! ZA prep script executed sequentially
    - &za_post_rerun_slurm
        "za_post_rerun.slurm" # ZA post rerun batch script name    !!!!! name of slurm here script created outside container
    - &za_post_script
        "za_post_sim.sh" # ZA post script name    !!!!! ZA prep script executed sequentially
    - &za_post_slurm
        "za_post.slurm" # ZA post batch script name    !!!!! name of slurm here script created outside container
    - &za_modules_block
        - gcc/5.3.0
        - openmpi/1.10.2
        - singularity/2.4.2
     

node_templates:
    ft2_node:
        type: hpc.nodes.Compute
        properties:
            config: { get_input: mso4sc_hpc_primary }
#            external_monitor_entrypoint: { get_input: monitor_entrypoint }
            external_monitor_entrypoint: ""
            job_prefix: "mso4sc"
            base_dir: "$LUSTRE"
            workdir_prefix: "za"
            skip_cleanup: true

    za_db_job:
#        type: hpc.nodes.singularity_job
        type: hpc.nodes.job
        properties:
            job_options: 
                type: 'SBATCH'
                modules: *za_modules_block
                command: { concat: [' $CURRENT_WORKDIR/', *za_db_slurm ] }
            deployment:
                bootstrap: 'scripts/za_db_bootstrap.sh'
                revert: 'scripts/za_db_revert.sh'
                inputs:
                    - *za_image_path
                    - *za_work_path
                    - *za_image
                    - *za_module_sing
                    - *za_db_script
                    - *za_db_slurm
                    - { get_input: mso4sc_dataset_tar }
                    - *za_db
                    - *za_hpc_partition_prep
                    - { get_input: mso4sc_dataset_lig }
                    - *za_lig
        relationships:
            - type: job_contained_in_hpc
              target: ft2_node
 
    za_prep_em_job:
        type: hpc.nodes.job
        properties:
            job_options: 
                #### try sbatch
                type: 'SBATCH'
                modules: *za_modules_block
                command: { concat: [' ', *za_work_path , '/', *za_prep_slurm ] }
            deployment:
                bootstrap: 'scripts/za_prep_bootstrap.sh'
                revert: 'scripts/za_prep_revert.sh'
                inputs:
                    - *za_lig
                    - { get_input: mso4sc_dataset_tar }
                    - { get_input: za_charge }
                    - *za_work_path
                    - *za_mail
                    - *za_prep_slurm
                    - { concat: [ *za_work_path,'/',*za_image ]}
                    - *za_prep_script
                    - *za_hpc_partition_prep
                    - *za_gmx_path
        relationships:
            - type: job_contained_in_hpc
              target: ft2_node
            - type: job_depends_on
              target: za_db_job
    
    za_mpi_em_job:
        type: hpc.nodes.job
        properties:
            job_options:
                type: 'SBATCH'
                modules: *za_modules_block
                command: { concat: [' ', *za_work_path, '/' , *za_mpi_em_slurm] }
                scale: 2
            deployment:
                bootstrap: 'scripts/za_mpi_em_bootstrap.sh'
                revert: 'scripts/za_mpi_em_revert.sh'
                inputs:
                    - *za_lig
                    - { get_input: mso4sc_dataset_tar }
                    - { get_input: za_charge }
                    - *za_work_path
                    - *za_mail
                    - *za_mpi_em_slurm
                    - { concat: [ *za_work_path ,'/',*za_image ]}
                    - *za_mpi_em_script
                    - *za_hpc_partition
                    - *za_mpi_nt
                    - *za_gmx_path
        relationships:
            - type: job_contained_in_hpc
              target: ft2_node
            - type: job_depends_on
              target: za_prep_em_job

    za_prep_nvt_job:
        type: hpc.nodes.job
        properties:
            job_options: 
                type: 'SBATCH'
                modules: *za_modules_block
                command: { concat: [' ', *za_work_path , '/', *za_prep_nvt_slurm ] }
            deployment:
                bootstrap: 'scripts/za_prep_nvt_bootstrap.sh'
                revert: 'scripts/za_prep_nvt_revert.sh'
                inputs:
                    - *za_lig
                    - { get_input: mso4sc_dataset_tar }
                    - { get_input: za_charge }
                    - *za_work_path
                    - *za_mail
                    - *za_prep_nvt_slurm
                    - { concat: [ *za_work_path,'/',*za_image ]}
                    - *za_prep_nvt_script
                    - *za_hpc_partition_prep
                    - *za_gmx_path
        relationships:
            - type: job_contained_in_hpc
              target: ft2_node
            - type: job_depends_on
              target: za_mpi_em_job
 
    za_mpi_nvt_job:
        type: hpc.nodes.job
        properties:
            job_options:
                type: 'SBATCH'
                modules: *za_modules_block
                command: { concat: [' ', *za_work_path, '/' , *za_mpi_nvt_slurm] }
                scale: 2
            deployment:
                bootstrap: 'scripts/za_mpi_nvt_bootstrap.sh'
                revert: 'scripts/za_mpi_nvt_revert.sh'
                inputs:
                    - *za_lig
                    - { get_input: mso4sc_dataset_tar }
                    - { get_input: za_charge }
                    - *za_work_path
                    - *za_mail
                    - *za_mpi_nvt_slurm
                    - { concat: [ *za_work_path ,'/',*za_image ]}
                    - *za_mpi_nvt_script
                    - *za_hpc_partition
                    - *za_mpi_nt
                    - *za_gmx_path
        relationships:
            - type: job_contained_in_hpc
              target: ft2_node
            - type: job_depends_on
              target: za_prep_nvt_job

    za_prep_npt_job:
        type: hpc.nodes.job
        properties:
            job_options: 
                type: 'SBATCH'
                modules: *za_modules_block
                command: { concat: [' ', *za_work_path , '/', *za_prep_npt_slurm ] }
            deployment:
                bootstrap: 'scripts/za_prep_npt_bootstrap.sh'
                revert: 'scripts/za_prep_npt_revert.sh'
                inputs:
                    - *za_lig
                    - { get_input: mso4sc_dataset_tar }
                    - { get_input: za_charge }
                    - *za_work_path
                    - *za_mail
                    - *za_prep_npt_slurm
                    - { concat: [ *za_work_path ,'/',*za_image ]}
                    - *za_prep_npt_script
                    - *za_hpc_partition_prep
                    - *za_gmx_path
        relationships:
            - type: job_contained_in_hpc
              target: ft2_node
            - type: job_depends_on
              target: za_mpi_nvt_job
 
    za_mpi_npt_job:
        type: hpc.nodes.job
        properties:
            job_options:
                type: 'SBATCH'
                modules: *za_modules_block
                command: { concat: [' ', *za_work_path , '/' , *za_mpi_npt_slurm] }
                scale: 2
            deployment:
                bootstrap: 'scripts/za_mpi_npt_bootstrap.sh'
                revert: 'scripts/za_mpi_npt_revert.sh'
                inputs:
                    - *za_lig
                    - { get_input: mso4sc_dataset_tar }
                    - { get_input: za_charge }
                    - *za_work_path
                    - *za_mail
                    - *za_mpi_npt_slurm
                    - { concat: [ *za_work_path,'/',*za_image ]}
                    - *za_mpi_npt_script
                    - *za_hpc_partition
                    - *za_mpi_nt
                    - *za_gmx_path
        relationships:
            - type: job_contained_in_hpc
              target: ft2_node
            - type: job_depends_on
              target: za_prep_npt_job

    za_prep_md_job:
        type: hpc.nodes.job
        properties:
            job_options: 
                type: 'SBATCH'
                modules: *za_modules_block
                command: { concat: [' ', *za_work_path , '/', *za_prep_md_slurm ] }
            deployment:
                bootstrap: 'scripts/za_prep_md_bootstrap.sh'
                revert: 'scripts/za_prep_md_revert.sh'
                inputs:
                    - *za_lig
                    - { get_input: mso4sc_dataset_tar }
                    - { get_input: za_charge }
                    - *za_work_path
                    - *za_mail
                    - *za_prep_md_slurm
                    - { concat: [ *za_work_path,'/',*za_image ]}
                    - *za_prep_md_script
                    - *za_hpc_partition_prep
                    - *za_gmx_path
        relationships:
            - type: job_contained_in_hpc
              target: ft2_node
            - type: job_depends_on
              target: za_mpi_npt_job
 
    za_mpi_md_job:
        type: hpc.nodes.job
        properties:
            job_options:
                type: 'SBATCH'
                modules: *za_modules_block
                command: { concat: [' ', *za_work_path , '/' , *za_mpi_md_slurm] }
                scale: 2
            deployment:
                bootstrap: 'scripts/za_mpi_md_bootstrap.sh'
                revert: 'scripts/za_mpi_md_revert.sh'
                inputs:
                    - *za_lig
                    - { get_input: mso4sc_dataset_tar }
                    - { get_input: za_charge }
                    - *za_work_path
                    - *za_mail
                    - *za_mpi_md_slurm
                    - { concat: [ *za_work_path ,'/',*za_image ]}
                    - *za_mpi_md_script
                    - *za_hpc_partition
                    - *za_mpi_nt
                    - *za_gmx_path
        relationships:
            - type: job_contained_in_hpc
              target: ft2_node
            - type: job_depends_on
              target: za_prep_md_job

    za_prep_rerun_job:
        type: hpc.nodes.job
        properties:
            job_options: 
                type: 'SBATCH'
                modules: *za_modules_block
                command: { concat: [' ', *za_work_path , '/', *za_prep_rerun_slurm ] }
            deployment:
                bootstrap: 'scripts/za_prep_rerun_bootstrap.sh'
                revert: 'scripts/za_prep_rerun_revert.sh'
                inputs:
                    - *za_lig
                    - { get_input: mso4sc_dataset_tar }
                    - { get_input: za_charge }
                    - *za_work_path
                    - *za_mail
                    - *za_prep_rerun_slurm
                    - { concat: [ *za_work_path ,'/',*za_image ]}
                    - *za_prep_rerun_script
                    - *za_hpc_partition_prep
                    - *za_gmx_path
        relationships:
            - type: job_contained_in_hpc
              target: ft2_node
            - type: job_depends_on
              target: za_mpi_md_job

    za_mpi_rerun_job:
        type: hpc.nodes.job
        properties:
            job_options:
                type: 'SBATCH'
                modules: *za_modules_block
                command: { concat: [' ', *za_work_path , '/' , *za_mpi_rerun_slurm] }
                scale: 2
            deployment:
                bootstrap: 'scripts/za_mpi_rerun_bootstrap.sh'
                revert: 'scripts/za_mpi_rerun_revert.sh'
                inputs:
                    - *za_lig
                    - { get_input: mso4sc_dataset_tar }
                    - { get_input: za_charge }
                    - *za_work_path
                    - *za_mail
                    - *za_mpi_rerun_slurm
                    - { concat: [ *za_work_path ,'/',*za_image  ]}
                    - *za_mpi_rerun_script
                    - *za_hpc_partition
                    - *za_mpi_nt
                    - *za_gmx_path
        relationships:
            - type: job_contained_in_hpc
              target: ft2_node
            - type: job_depends_on
              target: za_prep_rerun_job

    za_post_rerun_job:
        type: hpc.nodes.job
        properties:
            job_options: 
                type: 'SBATCH'
                modules: *za_modules_block
                command: { concat: [' ', *za_work_path , '/', *za_post_rerun_slurm ] }
            deployment:
                bootstrap: 'scripts/za_post_rerun_bootstrap.sh'
                revert: 'scripts/za_post_rerun_revert.sh'
                inputs:
                    - *za_lig
                    - { get_input: mso4sc_dataset_tar }
                    - { get_input: za_charge }
                    - *za_work_path
                    - *za_mail
                    - *za_post_rerun_slurm
                    - { concat: [ *za_work_path ,'/',*za_image ]}
                    - *za_post_rerun_script
                    - *za_hpc_partition_prep
                    - *za_gmx_path
        relationships:
            - type: job_contained_in_hpc
              target: ft2_node
            - type: job_depends_on
              target: za_mpi_rerun_job
              
    za_post_job:
        type: hpc.nodes.job
        properties:
            job_options: 
                type: 'SBATCH'
                modules: *za_modules_block
                command: { concat: [' ', *za_work_path , '/', *za_post_slurm ] }
            deployment:
                bootstrap: 'scripts/za_post_bootstrap.sh'
                revert: 'scripts/za_post_revert.sh'
                inputs:
                    - *za_lig
                    - { get_input: mso4sc_dataset_tar }
                    - { get_input: za_charge }
                    - *za_work_path
                    - *za_mail
                    - *za_post_slurm
                    - { concat: [ *za_work_path ,'/',*za_image ]}
                    - *za_post_script
                    - *za_hpc_partition_prep
                    - *za_gmx_path
        relationships:
            - type: job_contained_in_hpc
              target: ft2_node
            - type: job_depends_on
              target: za_post_rerun_job

outputs:
    za_db_job_name:
        description: first job name in the HPC
        value: { get_attribute: [za_db_job, job_name] }
    za_prep_em_job_name:
        description: first job name in the HPC
        value: { get_attribute: [za_prep_em_job, job_name] }
    za_mpi_em_job_name:
        description: first job name in the HPC
        value: { get_attribute: [za_mpi_em_job, job_name] }
    za_prep_nvt_job_name:
        description: first job name in the HPC
        value: { get_attribute: [za_prep_nvt_job, job_name] }
    za_mpi_nvt_job_name:
        description: first job name in the HPC
        value: { get_attribute: [za_mpi_nvt_job, job_name] }
    za_prep_npt_job_name:
        description: first job name in the HPC
        value: { get_attribute: [za_prep_npt_job, job_name] }
    za_mpi_npt_job_name:
        description: first job name in the HPC
        value: { get_attribute: [za_mpi_npt_job, job_name] }
    za_prep_md_job_name:
        description: first job name in the HPC
        value: { get_attribute: [za_prep_md_job, job_name] }
    za_mpi_md_job_name:
        description: first job name in the HPC
        value: { get_attribute: [za_mpi_md_job, job_name] }
    za_prep_rerun_job_name:
        description: first job name in the HPC
        value: { get_attribute: [za_prep_rerun_job, job_name] }
    za_mpi_rerun_job_name:
        description: first job name in the HPC
        value: { get_attribute: [za_mpi_rerun_job, job_name] }
    za_post_rerun_job_name:
        description: first job name in the HPC
        value: { get_attribute: [za_post_rerun_job, job_name] }
    za_post_job_name:
        description: first job name in the HPC
        value: { get_attribute: [za_post_job, job_name] }
    
