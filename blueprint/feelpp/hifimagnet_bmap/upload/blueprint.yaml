########
# Copyright (c) 2017 MSO4SC
# Author(s) javier.carnero@atos.net
#           guillaume.dolle@cemosis.fr
#           christophe.trophime@lncmi.cnrs.fr
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

tosca_definitions_version: cloudify_dsl_1_3

imports:
    # to speed things up, it is possible to download this file,
    - http://raw.githubusercontent.com/mso4sc/cloudify-hpc-plugin/master/resources/types/cfy_types.yaml
    # HPC pluging
    - http://raw.githubusercontent.com/MSO4SC/cloudify-hpc-plugin/master/plugin.yaml
    # - https://raw.githubusercontent.com/Trophime/cloudify-hpc-plugin/add_checks/plugin.yaml

inputs:
    email_user:
        description: email address for reporting
        default: "first.lastname@domain"

    # CESGA FTII parameters
    mso4sc_hpc_primary:
        description: FTII connection credentials
        default: {}

    resource_hpc_max_time:
        description: maximum allowed time for run (minutes and seconds)
        default: '00:50:00'

    resource_hpc_partition:
        type: string
        description: slurm partition to choose depending on the targeted machine
        default: 'thin-shared'

    resource_hpc_modules:
        description: modules to load depending on the targeted machine
        default:
            - gcc/6.3.0
            - openmpi/2.0.2
            - singularity/2.4.2

    resource_hpc_basedir:
        type: string
        description: basedir directory where calculations would be performed
        default: ${LUSTRE}

    resource_hpc_volumes:
        description: volumes to be mounted on the targeted machine
        default:
            - /scratch
            - /mnt

    mso4sc_dataset_model:
        description: Model dataset
        default: "None"

    mso4sc_datacatalogue_entrypoint:
        description: entrypoint of the data catalogue
        default: "http://193.144.35.207"

    mso4sc_datacatalogue_key:
        description: API Key to publish the outputs
        default: ""

    mso4sc_outdataset_outputs_at:
        description: ID of the CKAN output dataset
        default: ""

    DataCfg:
        description: name of the magnet cfg file without extension
        default: "HL-31"

    DataOptions:
        description: options to be passed to bmap
        default: ""

    DataCurrents:
        description: specifiy input currents in the insert (default is "[31000:31000:0]" for Helices, Bitters, Supra)
        default: "[31000:31000:0]"

    DataR:
        description: specifiy r data in m (default is "[0:0:1]" for [min,max,N])
        default: "[0:0:1]"

    DataZ:
        description: specifiy z data in m (default is "[0:0:1]"  for [min,max,N])
        default: "[0:0:1]"

    workdir_keep:
        type: boolean
        description: skip deletion of workdir
        default: true

    # # specs for retreiving singularity images
    sregistry_storage:
        description: define path to container directory
        default: "${LUSTRE}/singularity_images"

dsl_definitions:
    - &monitor_entrypoint #Monitor entrypoint IP
      "193.144.35.146"
    - &job_prefix #Job name prefix in HPCs
      "hifimagnet"
    - &email_type # define mail-type ADD, END, FAIL
      "ALL"
    - &hpc_workdir_prefix
      "bmap"
    - &sregistry_client
      "registry"
    - &sregistry_client_secrets
      "$HOME/.sregistry"
    - &sregistry_url
      "sregistry.srv.cesga.es"
    - &sregistry_image
      "mso4sc/sregistry:latest"
    - &singularity_image_uri
      "hifimagnet/hifimagnet:v0.103"
    - &singularity_image_filename
      "hifimagnet-hifimagnet-v0.103.simg"
    - &singularity_image_cleanup
      "false"

node_templates:
    primary_hpc:
        type: hpc.nodes.Compute
        properties:
            config: {get_input: mso4sc_hpc_primary}
            # external_monitor_entrypoint: *monitor_entrypoint
            # monitor_orchestrator_available: True
            job_prefix: *job_prefix
            base_dir: {get_input: resource_hpc_basedir}
            workdir_prefix: *hpc_workdir_prefix
            skip_cleanup: {get_input: workdir_keep}
            # simulate: True  # COMMENT to test against a real HPC

    job_bmap:
        type: hpc.nodes.singularity_job
        properties:
            job_options:
                mail_user: {get_input: email_user}
                mail_type: *email_type
                modules: {get_input: resource_hpc_modules}
                image: {concat: [{get_input: sregistry_storage}, '/', *singularity_image_filename]}
                home: '${PWD}:/home/${USER}'
                volumes: {get_input: resource_hpc_volumes}
                command: {concat: ['B_Map --interactive ', {get_input: DataCfg}, '.d ', {get_input: DataOptions}, ' < input.in > bmap.log 2>&1']}
                partition: {get_input: resource_hpc_partition}
                # reservation: {get_input: resource_hpc_reservation}
                nodes: 1
                tasks: 1
                tasks_per_node: 1
                max_time: {get_input: resource_hpc_max_time}
            skip_cleanup: {get_input: workdir_keep}
            deployment:
                bootstrap: 'scripts/bootstrap.sh'
                revert: 'scripts/revert.sh'
                #mso4sc_dataset_input_url replaced by mso4sc_dataset_model
                inputs:
                    - {get_input: sregistry_storage}
                    - *singularity_image_filename
                    - *singularity_image_uri
                    - *singularity_image_cleanup
                    - *sregistry_client
                    - *sregistry_client_secrets
                    - *sregistry_url
                    - *sregistry_image
                    - {get_input: mso4sc_datacatalogue_key}
                    - {get_input: mso4sc_dataset_model}
                    - {get_input: DataCfg}
                    - {get_input: DataCurrents}
                    - {get_input: DataR}
                    - {get_input: DataZ}

            # see single-sbatch-output/blueprint.yaml for ex
            publish:
                - type: "CKAN"
                  entrypoint: {get_input: mso4sc_datacatalogue_entrypoint}
                  api_key: {get_input: mso4sc_datacatalogue_key}
                  dataset: {get_input: mso4sc_outdataset_outputs_at}
                  file_path: {concat:['$CURRENT_WORKDIR/', {get_input: DataCfg}, '_Field_Map.dat']}
                  name: "FieldMap"
                  description: {concat:["Magnetic Field Map: I=", {get_input: DataCurrents}, " R=", {get_input: DataR}, " Z=", {get_input: DataZ}]}

        relationships:
            - type: job_contained_in_hpc
              target: primary_hpc

outputs:
    job_bmap:
        description: "generate Magnetic Field Map"
        value: {get_attribute: [job_bmap, job_name]}
