########
# Copyright (c) 2017 MSO4SC
# Author(s) javier.carnero@atos.net
#           guillaume.dolle@cemosis.fr
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

tosca_definitions_version: cloudify_dsl_1_3

imports:
    - feelpp_toolboxes_types.yaml

inputs:
    # Monitor
    monitor_entrypoint:
        description: Monitor entrypoint IP
        default: "127.0.0.1"
        type: string

    #############################################################
    # HPC clusters config
    #############################################################

    # Job prefix name
    job_prefix:
        description: Job name prefix in HPCs
        default: "mso_"
        type: string

    # CESGA FTII parameters
    mso4sc_hpc_primary:
        description: FTII connection credentials
        default: {}

    #############################################################
    # Feel++ Application config
    #############################################################
    feelpp_mesh_create:
        description: Application configuration
        default: {}
        
    feelpp_mesh_part:
        description: Application configuration
        default: {}

    feelpp_toolboxes:
        description: Application configuration
        default: {}

node_templates:

    main_hpc:
        type: hpc.nodes.Compute
        properties:
            config: { get_input: mso4sc_hpc_primary }
            external_monitor_entrypoint: { get_input: monitor_entrypoint }
#            monitor_orchestrator_available: True
            job_prefix: { get_input: job_prefix }
    #        #simulate: True  # COMMENT to test against a real HPC

    feelpp_mesh_create:
        type: hpc.nodes.feelpp.mesh.create
        properties:
            app_options: { get_input: feelpp_mesh_create }
#            avoid_cleanup: True # debug keep bash scripts
        relationships:
            - type: job_contained_in_hpc
              target: main_hpc

    feelpp_mesh_part:
        type: hpc.nodes.feelpp.mesh.part
        properties:
            app_options: { get_input: feelpp_mesh_part }
#            avoid_cleanup: True # debug keep bash scripts
        relationships:
            - type: job_contained_in_hpc
              target: main_hpc
            - type: job_depends_on
              target: feelpp_mesh_create
    
    feelpp_simulate:
        type: hpc.nodes.feelpp.toolboxes
        properties:
            app_options: { get_input: feelpp_toolboxes }
#            avoid_cleanup: True # debug keep bash scripts
        relationships:
            - type: job_contained_in_hpc
              target: main_hpc
            - type: job_depends_on
              target: feelpp_mesh_part

outputs:
    job_torsionbar:
        description: feelpp_toolboxes results
        value: { get_attribute: [ feelpp_simulate, job_name] }
