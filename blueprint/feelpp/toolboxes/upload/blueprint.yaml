########
# Copyright (c) 2017 MSO4SC
# Author(s) javier.carnero@atos.net
#           guillaume.dolle@cemosis.fr
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

tosca_definitions_version: cloudify_dsl_1_3

imports:
    - https://raw.githubusercontent.com/cloudify-cosmo/cloudify-manager/18.1.11/resources/rest-service/cloudify/types/types.yaml
    - http://raw.githubusercontent.com/MSO4SC/cloudify-hpc-plugin/master/plugin.yaml

inputs:
    # Monitor
    monitor_entrypoint:
        description: Monitor entrypoint IP
        default: "" # Required
        type: string

    # Job prefix name
    job_prefix:
        description: Job name prefix in HPCs
        default: "mso_"
        type: string

    job_nodes:
        description: number of tasks/processes to run in parallel
        default: 1
        type: integer

    job_tasks:
        description: number of tasks/processes to run in parallel
        default: 1
        type: integer

    job_tasks_per_node:
        description: number of tasks/processes to run in parallel
        default: 1
        type: integer

    job_max_time:
        description: maximum allowed time for run (minutes and seconds)
        default: '00:30:00'
        type: string

    job_hpc_partition:
        description: slurm partition to choose depending on the targeted machine
        default: 'thin-shared'
        type: string

    job_hpc_reservation:
        description: slurm partition to choose depending on the targeted machine
        default: ''
        type: string

    job_hpc_modules:
        description: modules to load depending on the targeted machine
        default:
            - gcc/6.1.0
            - openmpi/1.10.2
            - singularity/2.4.2

    job_hpc_workdir:
        description: Workdir for the bootstrap script
        default: '${LUSTRE}/mso4sc_orchestrator'
        type: string

    job_hpc_volumes:
        description: mount point in singularity image
        default:
            - '/scratch'
            - '/mnt'
            - '${LUSTRE}/mso4sc_orchestrator/feel:/feel'

    # CESGA FTII parameters
    mso4sc_hpc_primary:
        description: FTII connection credentials
        default: {} # required
        
    mso4sc_dataset_input_url:
        description: url to retrieve for case file
        default: "" #"/usr/local/share/feelpp/testcases/eye2brain/level1/lc3d.cfg"

    girder_repo_url:
        description: Girder repository
        default: "https://girder.math.unistra.fr"
        type: string

    girder_api_key:
        description: Girder api key to access private data
        default: "" # Required
        type: string

    girder_folder_id:
        description: Girder folder ID containing the image
        default: "5a627108b0e9570150cb23f5"
        type: string

    feelpp_toolbox_type:
        description: Feel++ toolbox type (solid, fluid, ...)
        default: "solid"
        type: string

    feelpp_dim:
        description: Topological dimension
        default: 3
        type: integer

    feelpp_config_file:
        description: Feel++ config file loaded from the singularity container
        default: "/usr/local/share/feelpp/testcases/CSM/cantilever/cantilever.cfg"
        type: string

    feelpp_opts:
        description: Feel++ config file loaded from the singularity container
        default: "--fe-approximation=P1"
        type: string

    singularity_image_file:
        description: Feel++ singularity image for eye2brain project
        default: "feelpp_feelpp-toolboxes-mso4sc.simg"
        type: string

    revert_no_erase:
        description: cleanup singularity image files (be careful, future image won't redownload updated updated image version!).
        default: 'True'
        type: string

    skip_cleanup:
        description: erase orchestrator temporary generated files (debug).
        default: False
        type: boolean

node_templates:
    main_hpc:
        type: hpc.nodes.Compute
        properties:
            config: { get_input: mso4sc_hpc_primary }
            external_monitor_entrypoint: { get_input: monitor_entrypoint }
            base_dir: { get_input: job_hpc_workdir }
            wordir_prefix: "feelpp_toolboxes"
            job_prefix: { get_input: job_prefix }

    job_toolboxes:
        type: hpc.nodes.singularity_job
        properties:
            job_options:
                modules: { get_input: job_hpc_modules }
                partition: { get_input: job_hpc_partition }
                reservation: { get_input: job_hpc_reservation }
                home: '${HOME}:/home/${USER}'
                volumes: { get_input: job_hpc_volumes }
                command: { concat: [
                        'feelpp_toolbox_', { get_input: feelpp_toolbox_type }, '_', { get_input: feelpp_dim }, 'd',
                        ' --config-file ', { get_input: feelpp_config_file }, ' ',
                        { get_input: feelpp_opts } ] }
                nodes: { get_input: job_nodes }
                tasks: { get_input: job_tasks }
                tasks_per_node: { get_input: job_tasks_per_node }
                max_time: { get_input: job_max_time }
                image: { concat:[ { get_input: job_hpc_workdir }, '/singularity_images/', { get_input: singularity_image_file } ] }
            deployment:
                bootstrap: 'scripts/bootstrap.sh'
                revert: 'scripts/revert.sh'
                inputs:
                    - { get_input: job_hpc_workdir }  # boostrap, revert scripts arg $1
                    - { get_input: singularity_image_file } # bootstrap, revert scripts arg $2
                    - { get_input: girder_repo_url }
                    - { get_input: girder_folder_id }
                    - { get_input: girder_api_key }
                    - { get_input: revert_no_erase } # NO_ERASE to not remove singularity image
            skip_cleanup: { get_input: skip_cleanup } # debug keep bash scripts

        relationships:
            - type: job_contained_in_hpc
              target: main_hpc

outputs:
    job_toolboxes:
        description: feelpp_toolboxes results
        value: { get_attribute: [job_toolboxes, job_name] }
