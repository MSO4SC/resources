########
# Copyright (c) 2017 MSO4SC - javier.carnero@atos.net
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# 3D AirQuality Prediction pilot TOSCA blueprint
# Akos KOVACS & Tamas BUDAI, 2018, Szechenyi Istvan University

tosca_definitions_version: cloudify_dsl_1_3

imports:
    # to speed things up, it is possible to download this file,
    - http://www.getcloudify.org/spec/cloudify/4.3.1/types.yaml
    # HPC pluging
    - http://raw.githubusercontent.com/MSO4SC/cloudify-hpc-plugin/master/plugin.yaml


inputs:
    # Job prefix name
    job_prefix:
        description: 3DairqualityPred
        default: "mcloudjob"
        type: string

    # use internal monitor, leave this empy
    monitor_entrypoint:
        description: Monitor entrypoint IP
        default: ""
        type: string

  # HPC configuration
    mso4sc_hpc_secondary:
        description: Configuration for the secondary HPC to be used
        default: {}

##
##      HPC input parameters
##

    datadir:
        description: working directory for user data
        default: "/nfs"
        type: string

##
##      User Input Parameters
##

    wind_profile:
        description: Wind profile (1 or 2)
        default: "1"
        type: string

    fluent_start_time:
        description: Start time of the simulation (in second from midnight)
        default: "18000"
        type: string

    fluent_iter_1:
        description: Dispersion simulation iteration number 1
        default: "30"
        type: string

    fluent_iter_2:
        description: Dispersion simulation iteration number 2
        default: "10"
        type: string


node_templates:
  sze_node:
        type: hpc.nodes.Compute
        properties:
            config: {get_input: mso4sc_hpc_secondary}
            external_monitor_entrypoint: { get_input: monitor_entrypoint }
            job_prefix: hpc_SZE_
            base_dir: "$HOME"
            workdir_prefix: ""
            skip_cleanup: True


  # 3dairq steps
  traffic:
        type: hpc.nodes.job
        properties:
            job_options:
                type: 'SRUN'
                command: { concat: [ {get_input: datadir},'/3dairq-sing/1-create_traffic.sh ',{get_input: datadir} ]}
                nodes: 1
                tasks: 1
                tasks_per_node: 1
                max_time: '01:00:00'
            deployment:
                inputs:
                    - { get_input: datadir }
            skip_cleanup: true
        relationships:
                    - type: job_contained_in_hpc
                      target: sze_node

  mesh:
        type: hpc.nodes.job
        properties:
            job_options:
                type: 'SRUN'
                command: { concat: [ {get_input: datadir},'/3dairq-sing/2-create_mesh.sh ',{get_input: datadir} ]}
                nodes: 1
                tasks: 1
                tasks_per_node: 1
                max_time: '01:00:00'
            deployment:
                inputs:
                    - { get_input: datadir }

            skip_cleanup: true
        relationships:
                    - type: job_contained_in_hpc
                      target: sze_node
                    - type: job_depends_on
                      target: traffic

  emission:
        type: hpc.nodes.job
        properties:
            job_options:
                type: 'SRUN'
                command: { concat: [ {get_input: datadir},'/3dairq-sing/3-create_emission.sh ',{get_input: datadir} ]}
                nodes: 1
                tasks: 1
                tasks_per_node: 1
                max_time: '00:10:00'
            deployment:
                inputs:
                    - { get_input: datadir }
            skip_cleanup: true
        relationships:
                    - type: job_contained_in_hpc
                      target: sze_node
                    - type: job_depends_on
                      target: mesh
  wind:
        type: hpc.nodes.job
        properties:
            job_options:
                type: 'SRUN'
                command: { concat: [ {get_input: datadir},'/3dairq-sing/4-create_wind.sh ',{get_input: datadir},' ',{get_input: wind_profile} ]}
                nodes: 1
                tasks: 1
                tasks_per_node: 1
                max_time: '00:10:00'
            deployment:
                inputs:
                    - 'wind'
            skip_cleanup: true
        relationships:
                    - type: job_contained_in_hpc
                      target: sze_node
                    - type: job_depends_on
                      target: traffic

  fluentdispersion:
        type: hpc.nodes.job
        properties:
            job_options:
                type: 'SRUN'
                command: { concat: [ {get_input: datadir},'/3dairq-sing/5-fluent-sim.sh ',{get_input: datadir},' ',{get_input: fluent_start_time},' ',{get_input: fluent_iter_1},' ',{get_input: fluent_iter_2} ]}
                nodes: 1
                tasks: 1
                tasks_per_node: 1
                max_time: '02:00:00'
            deployment:
                inputs:
                    - 'fluent-version'
            skip_cleanup: true
        relationships:
                    - type: job_contained_in_hpc
                      target: sze_node
                    - type: job_depends_on
                      target: wind
                    - type: job_depends_on
                      target: emission

outputs:
    traffic_:
        description: 3D AirQuality Prediction on SZE cluster
        value: { get_attribute: [traffic, job_name] }
    mesh_:
        description: 3D AirQuality Prediction on SZE cluster
        value: { get_attribute: [mesh, job_name] }
    emission_:
        description: 3D AirQuality Prediction on SZE cluster
        value: { get_attribute: [emission, job_name] }
    wind_:
        description: 3D AirQuality Prediction on SZE cluster
        value: { get_attribute: [wind, job_name] }
    fluentdispersion_:
        description: 3D AirQuality Prediction on SZE cluster
        value: { get_attribute: [fluentdispersion, job_name] }
				